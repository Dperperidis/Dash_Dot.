// <auto-generated />
using System;
using DashnDotApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DashnDotApp.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20181007181453_add5")]
    partial class add5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DashnDotApp.Model.Colors", b =>
                {
                    b.Property<string>("ColorsId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.HasKey("ColorsId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("DashnDotApp.Model.Items", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("DashnDotApp.Model.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductId");

                    b.Property<string>("PublicId");

                    b.Property<string>("Url");

                    b.Property<bool>("isMain");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("DashnDotApp.Model.Products", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Code");

                    b.Property<string>("ColorOfColorId");

                    b.Property<string>("Description");

                    b.Property<string>("Discount");

                    b.Property<string>("Line");

                    b.Property<string>("Material");

                    b.Property<string>("Price");

                    b.Property<string>("Quantity");

                    b.Property<string>("Season");

                    b.Property<string>("Size");

                    b.Property<string>("Sleeve");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ColorOfColorId")
                        .IsUnique()
                        .HasFilter("[ColorOfColorId] IS NOT NULL");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DashnDotApp.Model.ShoppingCarts", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created");

                    b.Property<string>("itemsId");

                    b.HasKey("Id");

                    b.HasIndex("itemsId");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("DashnDotApp.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DashnDotApp.Model.Items", b =>
                {
                    b.HasOne("DashnDotApp.Model.Products", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("DashnDotApp.Model.Photo", b =>
                {
                    b.HasOne("DashnDotApp.Model.Products", "Product")
                        .WithMany("Photos")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("DashnDotApp.Model.Products", b =>
                {
                    b.HasOne("DashnDotApp.Model.Colors", "Color")
                        .WithOne("Product")
                        .HasForeignKey("DashnDotApp.Model.Products", "ColorOfColorId");
                });

            modelBuilder.Entity("DashnDotApp.Model.ShoppingCarts", b =>
                {
                    b.HasOne("DashnDotApp.Model.Items", "items")
                        .WithMany()
                        .HasForeignKey("itemsId");
                });
#pragma warning restore 612, 618
        }
    }
}
